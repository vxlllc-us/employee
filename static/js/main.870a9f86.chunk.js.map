{"version":3,"sources":["lib/redux/modules/user/index.ts","res/ui/theme.ts","res/ui/strings.ts","lib/config/index.ts","lib/redux/modules/index.ts","lib/redux/index.ts","pages/landing/landing.page.tsx","pages/wrapper/wrapper.module.ts","components/protected/protected.component.tsx","pages/wrapper/wrapper.tsx","pages/home/home.module.ts","pages/home/home.page.tsx","index.tsx"],"names":["Actions","theme","primary","secondary","primaryText","secondaryText","s1","routes","landing","process","home","login","setSession","session","type","SET_SESSION","payload","initialState","active","user","rootReducer","combineReducers","runtime","state","action","middlewares","thunk","store","createStore","applyMiddleware","Landing","loading","onLogin","e","preventDefault","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","credential","accessToken","props","history","push","config","setState","catch","error","code","message","email","this","className","onClick","strings","React","Component","mapDispatchToProps","connector","connect","REACT_APP_API_KEY","REACT_APP_AUTH_DOMAIN","REACT_APP_DATABASE_URL","REACT_APP_PROJECT_ID","REACT_APP_STORAGE_BUCKET","REACT_APP_MESSAGING_SENDER_ID","REACT_APP_APP_ID","setup","a","firebase","length","apiKey","authDomain","databaseUrl","projectId","storageBucket","messagingSenderId","appId","sessionListener","wrapperModule","onAuthStateChanged","dispatch","ProtectedRoute","component","rest","useSelector","console","log","render","to","Wrapper","module","setTimeout","color","height","width","radius","margin","exact","path","Home","callback","signOut","err","modules","alert","root","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.870a9f86.chunk.js","sourcesContent":["import { UserInfo } from \"firebase\";\n\nexport const SET_SESSION = \"SET_SESSION\";\n\nexport interface Session {\n  active: boolean;\n  user: UserInfo | null;\n}\n\nexport interface RuntimeState {\n  session: Session;\n}\n\nexport enum Actions {\n  SET_SESSION = \"SET_SESSION\"\n}\n\nexport interface SetSessionAction {\n  type: Actions;\n  payload: Session;\n}\n\nexport type SessionActionTypes = SetSessionAction;\n\nexport function setSession(session: Session): SessionActionTypes {\n  return {\n    type: Actions.SET_SESSION,\n    payload: session\n  }\n}\n","const dark: string = \"#343d51\";\nconst light: string = \"#fbfbfb\";\nconst textDark: string = \"#0a0a0a\";\nconst textLight: string = \"#fbfbfb\";\n\nconst primary: string = light;\nconst secondary: string = dark;\nconst primaryText: string = textDark;\nconst secondaryText: string = textLight;\n\nconst theme: any = {\n  primary,\n  secondary,\n  primaryText,\n  secondaryText\n};\n\nexport default theme;\n","export default {\n  home: {\n    s1: \"Login With Google\"\n  }\n}\n\n","const { REACT_APP_BASE } = process.env;\n\nexport default {\n  routes: {\n    landing: `${REACT_APP_BASE}/`,\n    home: `${REACT_APP_BASE}/home`,\n    login: `${REACT_APP_BASE}/login`\n  },\n};\n","import { Actions, setSession, RuntimeState, SetSessionAction } from \"./user\";\n\nconst initialState: RuntimeState = {\n  session: {\n    active: false,\n    user: null\n  }\n};\nexport function runtime(\n  state: RuntimeState = initialState,\n  action: SetSessionAction\n): RuntimeState {\n  switch (action.type) {\n    case Actions.SET_SESSION:\n      return {\n        ...state,\n        session: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport {\n  setSession\n}\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nimport { runtime, setSession } from \"./modules\";\n\nconst rootReducer = combineReducers({\n  runtime\n});\nlet middlewares: any[] = [thunk];\n\nif(process.env.NODE_ENV === \"development\" || process.env.NODE_ENV === \"testing\") {\n  middlewares.push(logger);\n}\n\nexport {\n  setSession\n}\nexport type RootState = ReturnType<typeof rootReducer>;\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n","import React from \"react\";\nimport { auth, UserInfo } from \"firebase\";\nimport { connect, ConnectedProps } from \"react-redux\";\n\nimport \"./landing.scss\";\nimport { strings } from \"../../res\";\nimport { setSession, config } from \"../../lib\";\nimport { RootState } from \"../../lib/redux\";\nimport { Session } from \"../../lib/redux/modules/user\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\ninterface State {\n  loading: boolean;\n  user: UserInfo | null;\n}\ntype Props = RouteComponentProps<{}> & PropsFromRedux;\nclass Landing extends React.Component<Props, State> {\n  state: State = {\n    loading: false,\n    user: null\n  };\n\n  componentDidUpdate() {\n    if (this.props.runtime.session.active) {\n      this.props.history.push(config.routes.home);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.runtime.session.active) {\n      this.props.history.push(config.routes.home);\n    }\n  }\n\n  onLogin = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    e.preventDefault();\n    const provider = new auth.GoogleAuthProvider();\n    auth()\n      .signInWithPopup(provider)\n      .then((result: any) => {\n        const token = result.credential.accessToken;\n        const user: UserInfo = result.user;\n        this.props.setSession({\n          active: true,\n          user\n        });\n        this.props.history.push(config.routes.home);\n        this.setState({\n          loading: false,\n          user\n        });\n      })\n      .catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        const email = error.email;\n        const credential = error.credential;\n        this.setState({\n          loading: false\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"home-root\">\n        <div className=\"container\">\n          <div className=\"login-container\">\n            <div className=\"logo-container\"></div>\n            <div onClick={this.onLogin} className=\"button\">\n              <div className=\"google-logo-container\"></div>\n              <div className=\"text-container\">\n                <span>{strings.home.s1}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState): RootState => {\n  return state;\n};\n\nconst mapDispatchToProps = {\n  setSession: (session: Session) => setSession(session)\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(Landing);\n","import * as firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport { store, setSession } from \"../../lib\";\nimport * as wrapperModule from \"../wrapper/wrapper.module\";\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_DATABASE_URL,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_APP_ID\n} = process.env;\n\nexport async function setup() {\n  if (!firebase.apps.length) {\n    firebase.initializeApp({\n      apiKey: REACT_APP_API_KEY,\n      authDomain: REACT_APP_AUTH_DOMAIN,\n      databaseUrl: REACT_APP_DATABASE_URL,\n      projectId: REACT_APP_PROJECT_ID,\n      storageBucket: REACT_APP_STORAGE_BUCKET,\n      messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n      appId: REACT_APP_APP_ID\n    });\n  }\n}\n\nexport async function sessionListener(): Promise<void> {\n  if (!firebase.apps.length) {\n    wrapperModule.setup();\n  }\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      store.dispatch(\n        setSession({\n          active: true,\n          user\n        })\n      );\n    } else {\n      store.dispatch(\n        setSession({\n          active: false,\n          user: null\n        })\n      );\n    }\n  });\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router\";\nimport { useSelector } from \"react-redux\";\n\nimport { Session } from \"../../lib/redux/modules/user\";\nimport { RootState } from \"../../lib/redux\";\nimport { config } from \"../../lib\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}: any): React.ReactElement => {\n  const session: Session = useSelector(\n    (state: RootState) => state.runtime.session\n  );\n  console.log(\"session in protectedroute: \", session);\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        session.active == true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={config.routes.landing} />\n        )\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ScaleLoader } from \"react-spinners\";\n\nimport { config } from \"../../lib\";\nimport * as module from \"./wrapper.module\";\nimport { Landing, Home } from \"..\";\nimport { store } from \"../../lib\";\nimport { ProtectedRoute } from \"../../components\";\nimport { theme } from \"../../res\";\nimport \"./wrapper.scss\";\n\ninterface IState {\n  loading: boolean;\n}\nexport default class Wrapper extends React.Component<any, IState> {\n  state: IState = {\n    loading: true\n  };\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    await module.setup();\n    await module.sessionListener();\n    setTimeout(() => {\n      this.setState({\n        loading: false\n      });\n    }, 2000);\n  }\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"wrapper-root\">\n          <ScaleLoader\n            color={theme.secondary}\n            height={12}\n            width={4}\n            radius={2}\n            margin={2}\n          />\n        </div>\n      );\n    }\n    return (\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route exact path={config.routes.landing} component={Landing} />\n            <ProtectedRoute exact path={config.routes.home} component={Home} />\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\n","import { auth } from \"firebase\";\n\nexport async function signOut(callback: (err?: Error) => void): Promise<void> {\n  return auth()\n    .signOut()\n    .then(() => {\n      callback();\n    })\n    .catch((err: Error) => {\n      callback(err);\n    });\n}\n","import React from \"react\";\n\nimport * as modules from \"./home.module\";\nimport \"./home.scss\";\n\nfunction signOut(e: React.MouseEvent<HTMLButtonElement>): any {\n  e.preventDefault();\n\n  modules.signOut((err?: Error) => {\n    if (err) {\n      alert(err.message);\n    }\n  });\n}\n\nconst Home: React.FC = (props: any): React.ReactElement => {\n  return (\n    <div className={\"home-root\"}>\n      <h1>Home</h1>\n      <button onClick={signOut}>Logout</button>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\nimport { Wrapper } from \"./pages\";\n\nconst root: any = document.getElementById(\"root\");\n\nReactDOM.render(<Wrapper />, root);\n"],"sourceRoot":""}